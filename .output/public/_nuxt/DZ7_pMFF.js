import{S as u,r as y}from"./BzQlD_xP.js";const i="memo-flashcards-streak",S=10,v=90,a=y([]),o=y(0),p=()=>{const n=()=>{const t=new Date,r=new Date(t.getTime()-v*24*60*60*1e3).toISOString().split("T")[0];a.value=a.value.filter(l=>l.date>=r)},c=()=>{try{const t=localStorage.getItem(i);if(t){const e=JSON.parse(t);a.value=e.history||[],o.value=e.todayCount||0,n()}}catch(t){console.error("Erreur lors du chargement du streak:",t),a.value=[],o.value=0}},s=()=>{try{const t={history:a.value,todayCount:o.value};localStorage.setItem(i,JSON.stringify(t))}catch(t){console.error("Erreur lors de la sauvegarde du streak:",t)}},d=()=>new Date().toISOString().split("T")[0],f=()=>{o.value+=1,s()},g=()=>{const t=d(),e=a.value.find(r=>r.date===t);return e?e.cardsReviewed=o.value:a.value.push({date:t,cardsReviewed:o.value}),n(),s(),!0},k=()=>{const t=d();return a.value.some(e=>e.date===t)},T=()=>{const t=new Date;let e=0;for(let r=0;r<v;r+=1){const C=new Date(t.getTime()-r*24*60*60*1e3).toISOString().split("T")[0];if(a.value.some(w=>w.date===C))e+=1;else break}return e},h=()=>o.value>=S,m=()=>{o.value=0,s()},D=()=>{a.value=[],o.value=0,s()};return typeof window<"u"&&c(),{streakHistory:u(a),todayCardsCount:u(o),loadStreak:c,incrementTodayCards:f,validateTodayStreak:g,isTodayStreakValidated:k,getCurrentStreakLength:T,shouldValidateStreak:h,resetTodayCount:m,resetStreak:D,MIN_CARDS_FOR_STREAK:S}};export{p as u};
